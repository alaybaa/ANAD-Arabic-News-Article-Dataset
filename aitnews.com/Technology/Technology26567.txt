الوظائف السبعة الأكثر إستعمالا و فائدة في PHP 

 هل ألقيت نظرة على قائمة الوظائف المتوفرة في لغة البرمجة PHP؟ على حد قول الموقع الرسمي للغة البرمجة PHP عدد هذه الوظائف يقدر بـ 5025 وظيفة. لحسن الحظ يوجد لدينا عدة مواقع لتعليمنا ماهية هذه الوظائف، لكن يبقى لدينا مشكل الوقت، فلا نستطيع تعلمها كلها في وقت قصير. لهذا الغرض أقدم لكم أكثرها استعمالا و أعظمها نفعا في سبعة محاور.الوظيفة الأولى: array_randلنبدأ بواحدة بسيطة. كلنا يريد الحصول على مواد عشوائية من محتوى المصفوفة array. يجب أن نستخدم rand أو mt_rand للحصول على رقم عشوائي، مع توجيه القيمة الأولى للمصفوفة 0 كأدنى قيمة للأرقام العشوائية و القيمة الأخيرة كحد أقصى لها. مما يحقق لنا مبتغانا بطريقة رائعة.على كل حال، توجد طريقة أسهل من هذا بكثير: array_rand. ضعها فقط مع المصفوفة و ستحصل على قيم عشوائية للمصفوفة. $words = ["arab", "script", "mohamed", "amine"];
 $random = array_rand($words);
 $words[$random];إن أردت أكثر من قيمة عشوائية للمصفوفة أضف عامل آخر تحدد فيه عدد استخراج النتائج من المصفوفة.الوظيفة الثانية: strip_tagsعادة نتلقى نصوصا ضخمة من المستعمل كتعليقات أو رسائل …إلخ. بالطبع، أنت لا تريد لهذا المستعمل أن يراسلك بنصوص برمجية قد تؤثر على موقعك، سواء كانت HTML أو JavaScript أو PHP و غيرها من اللغات البرمجية. بل تريد أن تتلقى نصا عاديا يخلو من كل التشعبات البرمجية بمختلف ألوانها، لهذا نضيف الوظيفة المخصصة لذلك و هي strip_tags.$text = "&lt;div&gt; رسالة من مستعمل &lt;/div&gt;";
 echo strip_tags($text); // " رسالة من مستعمل "لكن و بالتأكيد ستحتاج لترك بعض العناصر  مثل &lt;strong&gt; و &lt;em&gt; أو &lt;code&gt; ليتم استعمالها من طرف المستعمل بدون إدراجها ضمن العناصر المحولة إلى نص عادي. لتحقيق ذلك نضيف عامل آخر للوظيفة و نحدد العناصر المستثناة من التحويل. $text = "&lt;div&gt;&lt;strong&gt; رسالة من مستعمل &lt;strong&gt;&lt;/div&gt;";
 echo strip_tags($text, "&lt;strong&gt;&lt;em&gt;&lt;code&gt;"); // "&lt;strong&gt; رسالة من مستعمل &lt;strong&gt;"الوظيفة الثالثة: strftimeالتاريخ أمر لا يمكن الاستغناء عنه في تطبيقات الويب، لذا يجب أن تتمكن من استعماله بعدة أشكال و طرق عند الحاجة. ليس صعبا الحصول على ذلك، فقط استخدم time(). لكن ماذا عن طريقة عرضه للمستعمل؟. الوظيفة strftime يمكنها تحقيق كل هذا إلى أي شكل تريده. بحيث تحدد طرق العرض في العامل الأول للوظيفة.strftime("%B %d, %Y", time()); // March 05, 2012يمكننا التعرف على عدة أشكال للتاريخ من خلال المساعدة الرسمية لموقع لغة البرمجة PHP.الوظيفة الرابعة: basenameعند التعامل مع ملف، عادة نفضل الحصول عليه من خلال تحديد مساره الكلي. على كل حال في حين أردت أن تظهر معلومات عن هذا الملف للمستعمل، مثل عرض اسم هذا الملف بدون عرض اسم امتداده. أدخل الوظيفة basename، بحيث تقوم هي بقطع امتداد الملف و إظهار الاسم فقط. $path = "/wow/yay/path/in/where/file.txt";
 $name1 = basename($path); // file.txt
 $name2 = basename($path, ".txt"); // fileالوظيفة الخامسة: listهذه الوظيفة رائعة جدا. لنفترض بأن لدينا مصفوفة و تريد إرسال كل القيم إلى متغيرات. الوظيفة list تنتج كل هذا ببساطة.$array = ["Mohamed", "Amine"];
 list($m, $a) = $array;
 echo $m; // Mohamed
 echo $a; // Amineكما ترى، أضفنا بعض أسماء المتغيرات إلى العامل الأول من الوظيفة list بحيث تتجه كل قيمة في المصفوفة إلى المتغير الخاص بها حسب الترتيب.الوظيفة السادسة: rangeإن أردت استخراج أرقام متسلسلة النتائج، ستحتاج للوظيفة range. فقط أعطها رقم البداية و النهاية أو حرف البداية و النهاية، و ستكون النتيجة أرقام تسلسلية أو أحرف متتابعة.range(0, 10); // array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
 range('a', 'e'); // array('a', 'b', 'c', 'd', 'e');كما نرى. هذا مدى تضميني، كما يمكن لنا أيضا أن نحدد عدد الأرقام المضافة في كل خطوة بإضافة متعامل ثان للوظيفة range.range(3, 12, 3); // array(3, 6, 9, 12);الوظيفة السابعة و الأخيرة: issetهذه طريقة مفيدة للتأكد إن كان للمتغير قيمة أو لا. استعمل الوظيفة isset و اسم المتغير المراد التأكد منه. بذلك سينتج قيمة حقيقية في حالة وجود قيمة أو قيمة خاطئة في حالة عدم توفر هذا الأخير.$name = "Amine";
 isset($name); // true
 isset($age); // falseيمكن لهذه الوظيفة التأكد من المتغير و المصفوفة و حتى كتل الوظائف و الأدوات الشرطية. كمثال سنتأكد من وجود معلومات مرسلة من المستعمل مثل التعليق أو الرسائل … إلخ.if(isset($_GET['name']))    // نتيجة في حالة التأكد من الإسم
 } else    // نتيجة في حالة عدم توفر الإسم
 }هل هذا صعب؟حسنا، ها نحن هنا مذ التقينا في أعلى الصفحة “عندما كنت تقول PHP صعب جدا و لا أستطيع فهمه” أقول لك بأن PHP يبدأ بوظائف سهلة مثل السابق ذكرها ثم يتم التقدم شيئا فشيئا إلى ما يسمى بالمتقدم. إذا لا تقطع الأمل و واصل التعرف على هذه الوظائف. هذه هي أفكاري السبعة حول أهم الوظائف الموجودة في عالمنا اليوم، إن كان لديك أي اقتراح أو سؤال أو “انتقاد” لا تبخل علي بتعليقك. و السلام عليكم و رحمة الله تعالى و بركاته.